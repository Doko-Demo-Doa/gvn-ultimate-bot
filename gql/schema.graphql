# GraphQL schemas
#
# https://gqlgen.com/getting-started/

type RegisterLoginOutput {
  token: String!
  user: User!
}

type User {
  id: Int!
  name: String!
  email: String!
  role: String!
}

type DiscordMessageLog {
  id: ID!
  from_user: User!
  content: String!
  channel: DiscordChannel!
}

type DiscordChannel {
  id: Int!
  channel_id: String!
  type: Int!
  name: Int!
}

type DiscordUser {
  id: String!
  discriminator: String!
  user_id: String!
  avatar: String!
  premium_type: Int!
}

type DiscordRole {
  id: String!
  name: String!
  hoist: Boolean
  mentionable: Boolean!
  color: Int!
}

type DiscordUserRole {
  id: Int!
  granted_role: DiscordRole!
  granted_date: Int!
  expiration_date: Int!
}

# ========== Input ==========
input RegisterLogin {
  email: String!
  password: String!
}

input UpdateUser {
  name: String
  email: String!
}

# ========== Query ==========
type Query {
  user(id: Int!): User!
  userProfile: User!
}

# ========== Mutation ==========
type Mutation {
  register(input: RegisterLogin!): RegisterLoginOutput!
  login(input: RegisterLogin!): RegisterLoginOutput!
  updateUser(input: UpdateUser!): User!
  forgotPassword(email: String!): Boolean!
  resetPassword(resetToken: String!, password: String!): RegisterLoginOutput!
}